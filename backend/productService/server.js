// Import necessary packages
const https = require("https"); // Import the HTTPS module
const fs = require("fs"); // Import the File System module
const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
require("dotenv").config(); // Load environment variables from .env file

// Create an Express app
const app = express();

// Middleware to parse JSON data and urlencoded data
app.use(express.json({ limit: "100mb" }));
app.use(express.urlencoded({ limit: "100mb", extended: true }));

// Enable CORS
app.use(cors());

const PORT = process.env.PORT; // Get port number from environment variables
const URI = process.env.URI; // Get MongoDB URI from environment variables
// Reading SSL certificate and private key generated by mkcert
const options = {
  key: fs.readFileSync("../certificate/localhost-key.pem"), // Path to the private key file
  cert: fs.readFileSync("../certificate/localhost.pem"), // Path to the certificate file
};

// Connecting to the MongoDB database and starting the HTTPS server
mongoose
  .connect(URI, { useUnifiedTopology: true })
  .then(() => {
    console.log("Connection to MongoDB successful");

    // Creating HTTPS server with SSL certificate
    https.createServer(options, app).listen(PORT, () => {
      console.log(`Secure server is running on https://localhost:${PORT}`);
    });
  })
  .catch((err) => {
    console.log(err.message);
  });

const itemRouter = require("./routes/item"); // Import router for item-related endpoints
app.use("/api/product", itemRouter); // Mount itemRouter at /api/product endpoint
